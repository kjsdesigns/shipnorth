name: Deploy to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ca-central-1
  AWS_ACCOUNT_ID: 905418363362

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::905418363362:role/GitHubActionsShipnorthRole
          role-session-name: GitHubActions-Shipnorth
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Verify AWS connection
        run: |
          aws sts get-caller-identity
          echo "Successfully authenticated with AWS using OIDC!"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build applications
        run: npm run build
      
      - name: Build Next.js web application
        run: |
          cd apps/web
          npm ci
          NEXT_PUBLIC_API_URL=https://rv6q5b27n2.execute-api.ca-central-1.amazonaws.com npm run build
      
      - name: Deploy infrastructure with CDK
        run: |
          cd infrastructure
          npm ci
          # Deploy both API and Web stacks
          npx cdk deploy ShipnorthSimple-dev --require-approval never --context environment=dev
          npx cdk deploy ShipnorthWeb-dev --require-approval never --context environment=dev
      
      - name: Invalidate CloudFront cache for instant updates
        run: |
          # Get CloudFront distribution ID
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[0].Id" --output text)
          echo "Invalidating CloudFront distribution: $DISTRIBUTION_ID"
          
          # Create invalidation for all paths
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*" \
            --query "Invalidation.Id" \
            --output text
          
          echo "Cache invalidation initiated - updates will be visible immediately!"
      
      - name: Run post-deployment tests
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Run E2E tests against dev environment
          TEST_ENV=dev npm run test:e2e
      
      - name: Health check
        run: |
          echo "Deployment complete!"
          echo "API Backend: https://rv6q5b27n2.execute-api.ca-central-1.amazonaws.com"
          echo "Web Frontend: https://d3i19husj7b5d7.cloudfront.net"
          echo "No manual secrets configuration needed - using AWS OIDC!"